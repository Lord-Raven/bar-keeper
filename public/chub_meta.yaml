# All of these fields are optional, as is this file itself,
#   in which case these values can be managed in the UI.

# The name of the stage.
project_name: "Barkeeper"

# A short tagline to show in search.
tagline: "A barkeeping sim based on any card."

creator_notes: "
<b>_Warning: I do <span style=\"color:red;\">not</span> recommend playing this stage if you rely on a jailbreak or token budget._</b>
<br>
<br>
This is little more than a proof of concept for the kind of full-screen experiences that Chub's stages can produce. Adding this stage to a chat will essentially convert that session into a simple bartending visual novel, 
where the user's persona is a bartender who meets and interacts with various characters, but the only choices the player makes is what drinks to serve when prompted. 
<br>
<br>
<img src=\"https://avatars.charhub.io/avatars/uploads/images/gallery/file/0fed37a1-97c3-4eb4-aaca-9ac42345cba7/0803a323-54b3-49b3-8b6e-6edabbff6ea4.png\" alt=\"Example Screenshot\" style=\"display: block; margin: auto; width: 75%; height: auto; max-width: 1750px;\"/>
<br>
<br>
Characters will come and go, with a handful of drink prompts each night and a limited stock of each beverage. 
Storylines and relationships may emerge and resolve organically, hopefully influenced by the drinks you choose to give. There's no end game, just a stream of nights and regulars.
<br>
<br>
<img src=\"https://avatars.charhub.io/avatars/uploads/images/gallery/file/1026ba47-4d23-47b6-8cc0-71ff7a5c454e/bb08bcf2-38b1-4585-af6e-0c5c5e0001c4.png\" alt=\"Another Example Screenshot\" style=\"display: block; margin: auto; width: 75%; height: auto; max-width: 1750px;\"/>
<br>
<br>
The stage will distill the chat's primary character card into a set of themes and use that to generate a bar, five beverages, and four characters--plus an additional character for each bot you add to the chat. 
The style and atmosphere vary _wildly_ based upon the card you start it with, so go ahead and find a card with a bizarre setting and add Barkeeper from the chat settings.
<br>
<br>
<img src=\"https://avatars.charhub.io/avatars/uploads/images/gallery/file/faf5a7f6-957e-48cf-993c-d61c166380c6/5a4d4be5-a505-498c-933c-2deed326b888.png\" alt=\"How to Add the Stage in Chat Settings\" style=\"display: block; margin: auto; width: 50%; height: auto; max-width: 795px !important;\"/>
<br>
<br>
This stage makes *many* generative calls, particularly when starting a new game. It will burn through tokens and image generation. 
Requests include the user's jailbreak, but they also include additional instructions and details that are often the result of other text gen requests. 
_I have done zero testing with corporate models and offer no expectations for how this stage could impact your account._ 
<br>
<br>
The stage isn't particularly NSFW in itself, but it does contain some NSFW sample data; ultimately, the game derives themes from the character card, which could result in unsavory extrapolations--some of which may not be immediately transparent to the player. 
Chub will block image generation of questionable content, which could be triggered by the procedural nature of this stage's content generation--especially if the character you are using features immature themes. 
If you are seeing lots of missing images (black silhouette default images for characters or drinks), please consider playing this stage with a different card. 
<br>
<br>
\"New Game\" will blow away all of the stage's content and progress for that chat and re-generate everything. If you dislike a particular piece of art that was generated, you can use the settings pane to regenerate specific images. 
If you receive a bad or undesirable response, there is a re-roll button; there is no tree navigation, so using this feature will make any messages beyond the re-rolled message inaccessible.
<br>
<br>
**Shortcomings**
<br>
I feel there are some clear shortfalls in what this stage achieves, and maybe some of these items could be addressed or at least improved with sufficient time or motivation, but I don't know that they will be. 
<li>It probably looks terrible in some layouts--especially portrait. Maybe I'll try to fix that.<br>
<li>There is an issue where stage-originated text gen requests can repeatedly fail. In my experience, refreshing a few times or clearing the cache can resolve this. If the stage stops loading new responses, this is likely the culprit.<br>
<li>A lot of the stage's behavior and performance is contingent upon your chosen LLM and generation settings; your jailbreak in particular could cause trouble if it is overpowering the stage's instructions.<br>
<li>The stage does very little quality control, so you are at the mercy of the LLM to properly format responses and not go off the rails with activity that isn't internally represented by the stage.<br>
<br>
<br>
**What's Next**
<br>
For me, this was an exercise in producing a stage that exists outside of the traditional chat structure, demonstrating that stages can offer completely different experiences. 
Although it may feel like a (linear) chat, this stage doesn't leverage Chub's chat tree whatsoever (you can see this by the stagnant message counts while playing). 
I have no further significant plans for this stage, but I may continue to tweak and improve it over time. 
I am already applying a lot of what I've learned here toward more elaborate projects, so hopefully I'll have some cool stuff to share in the future =).
<br>
<br>
04/22/2025 - Another minor name lookup change to address the game not highlighting appropriate characters on their turns. Minor prompt adjustments along with that--trying to get more commitment to style.<br>
04/19/2025 - Added a background blur effect. Some patron generation and prompt improvements; trying to get a broader variety of patrons and varying response sizes to suit the type of narration requested.<br>
04/18/2025 - Reduced history provided in the prompt by a good bit. Adjusted some other prompts slightly. Improved character determination when the LLM uses nicknames.<br>
02/25/2025 - Fixing the way the title screen adjusts to some window layouts. Also revised emotion handling a bit.
"

# 'PUBLIC', 'PRIVATE', or 'UNLISTED'.
visibility: 'PUBLIC'

position: 'FULLSCREEN'

tags:
 - 'NSFW'
 - 'Stage'
 - 'Game'
 - 'Scenario'
 - 'Bartender'
 - 'Slice of Life'
 - 'Visual Novel'

config_schema:
  title: Barkeeper Config
  type: object
  properties:
    debug:
      title: Debug Mode
      type: boolean
      default: false

# The schema of the state that you store.
# This isn't needed even if you do store state,
#   and is here more for future use cases to
#   optimize storage.
state_schema:
  init:
    type: object
    properties:
      grid:
        type: string
  message:
    type: object
    properties:
      angry:
        type: boolean
        default: true
  chat:
    type: object
    properties:
      visited:
        type: array
        items:
          type: integer

# Whether to publish as 'Anonymous' instead of under your username.
# is_anonymous: false

# Self-explanatory.
# ratings_disabled: false

# This is here for future cases where ex. you need user secrets,
#    but currently does nothing.
# permissions:

# extension_id is automatically generated on push with a new project;
#    you should not make or set this value.
# github_path will be added if it does not exist. It is the URL of the repo.


github_path: 'https://github.com/Lord-Raven/bar-keeper'


extension_id: 'bar-keeper-8bfd97fa0e6c'

